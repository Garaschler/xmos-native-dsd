diff -uNrp linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/pcm.c linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/pcm.c
--- linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/pcm.c	2014-10-05 21:23:04.000000000 +0200
+++ linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/pcm.c	2014-11-28 14:22:26.450995899 +0100
@@ -482,6 +482,11 @@ static int set_format(struct snd_usb_sub
 	/* set interface */
 	if (subs->interface != fmt->iface ||
 	    subs->altset_idx != fmt->altset_idx) {
+
+		err = snd_usb_select_mode_quirk(subs, fmt);
+		if (err < 0)
+			return -EIO;
+
 		err = usb_set_interface(dev, fmt->iface, fmt->altsetting);
 		if (err < 0) {
 			dev_err(&dev->dev,
diff -uNrp linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/quirks.c linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/quirks.c
--- linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/quirks.c	2014-11-28 14:20:36.394987884 +0100
+++ linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/quirks.c	2014-11-28 14:22:46.850738815 +0100
@@ -1102,6 +1102,48 @@ void snd_usb_set_format_quirk(struct snd
 	}
 }
 
+
+/* Marantz/Denon USB DACs need a vendor cmd to switch
+ * between PCM and native DSD mode */
+int snd_usb_select_mode_quirk(struct snd_usb_substream *subs,
+			      struct audioformat *fmt)
+{
+	struct usb_device *dev = subs->dev;
+	int err;
+
+	switch (subs->stream->chip->usb_id) {
+	case USB_ID(0x154e, 0x3005): /* Marantz HD-DAC1 */
+	case USB_ID(0x154e, 0x3006): /* Marantz SA-14S1 */
+
+		/* First switch to alt set 0, otherwise the mode switch cmd
+		 * will not be accepted by the DAC */
+		err = usb_set_interface(dev, fmt->iface, 0);
+		if (err < 0)
+			return err;
+
+		mdelay(20); /* Delay needed after setting the interface */
+
+		switch(fmt->altsetting) {
+		case 2: /* DSD mode requested */
+			err = snd_usb_ctl_msg(dev, usb_sndctrlpipe(dev, 0), 0,
+					      USB_DIR_OUT|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,
+					      1, 1, NULL, 0);
+			if (err < 0)
+				return err;
+			break;
+		case 1: /* PCM mode requested */
+			err = snd_usb_ctl_msg(dev, usb_sndctrlpipe(dev, 0), 0,
+					      USB_DIR_OUT|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,
+					      0, 1, NULL, 0);
+			if (err < 0)
+				return err;
+			break;
+		}
+		mdelay(20);
+	}
+	return 0;
+}
+
 void snd_usb_endpoint_start_quirk(struct snd_usb_endpoint *ep)
 {
 	/*
diff -uNrp linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/quirks.h linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/quirks.h
--- linux-3.17.4-200.jk5.fc20.x86_64.org/sound/usb/quirks.h	2014-10-05 21:23:04.000000000 +0200
+++ linux-3.17.4-200.jk5.fc20.x86_64.new/sound/usb/quirks.h	2014-11-28 14:22:08.586345305 +0100
@@ -31,6 +31,9 @@ void snd_usb_ctl_msg_quirk(struct usb_de
 			   __u8 request, __u8 requesttype, __u16 value,
 			   __u16 index, void *data, __u16 size);
 
+int snd_usb_select_mode_quirk(struct snd_usb_substream *subs,
+			      struct audioformat *fmt);
+
 u64 snd_usb_interface_dsd_format_quirks(struct snd_usb_audio *chip,
 					struct audioformat *fp,
 					unsigned int sample_bytes);
